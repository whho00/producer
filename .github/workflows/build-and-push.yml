name: Build and Push to ECR

on:
  push:
    branches:
      - main   # run when code is pushed to main branch
    paths:
      - 'src/**'
      - 'target/**'
      - 'Dockerfile'
      - 'charts/**'
      - '.github/workflows/build-and-push.yml'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build JAR
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Login to AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build Docker image
      - name: Build, Tag, and Push Image to ECR
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          docker build --no-cache -t $IMAGE_URI .
          docker push $IMAGE_URI

      # Debug: Check Docker image
      #- name: Check docker JAR contents
      #  run: jar tf target/producer1-0.0.1-SNAPSHOT.jar 

      # Debug: verify AWS identity
      #- name: Verify AWS identity
      #  run: aws sts get-caller-identity

      # (Optional) Deploy to EKS
      # - name: Update K8s Deployment
      #   run: |
      #     aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name kafka-microservices
      #     kubectl set image deployment/producer1 producer1=$IMAGE_URI -n default
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_EKS }}

      - name: Set up kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION_EKS }} --name kafka-microservices

      - name: Verify AWS identity
        run: aws sts get-caller-identity

      - name: Verify cluster access
        run: kubectl get nodes

     - name: Helm upgrade
       run: |
         helm upgrade --install producer1 ./charts \
           --namespace default \
           --set image=$IMAGE_URI

